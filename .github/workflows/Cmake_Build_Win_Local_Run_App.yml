name: Build Qt Car Telltales

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    env:
      BUILD_DIR: build
      EXE_NAME: QtTelltaleProject.exe
      QT_VERSION: 5.15.2
      QT_ARCH: win64_msvc2019_64

    steps:
      - name: Checkout SCM
        uses: actions/checkout@v4

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          arch: ${{ env.QT_ARCH }}

      - name: Setup Repository
        shell: cmd
        run: |
          echo "Running setup repository batch script..."
          if exist "${{ github.workspace }}\Scripts\Setup_Repo.bat" (
            call "${{ github.workspace }}\Scripts\Setup_Repo.bat" main
          ) else (
            echo "Setup_Repo.bat not found, skipping..."
          )

      - name: Clean
        shell: cmd
        run: |
          echo "Cleaning previous build files..."
          if exist "${{ github.workspace }}\${{ env.BUILD_DIR }}" rmdir /S /Q "${{ github.workspace }}\${{ env.BUILD_DIR }}"
          if exist "${{ github.workspace }}\CMakeCache.txt" del "${{ github.workspace }}\CMakeCache.txt"

      - name: CMake Configure
        shell: cmd
        run: |
          echo "Configuring CMake project..."
          cmake -S "${{ github.workspace }}" -B "${{ github.workspace }}\${{ env.BUILD_DIR }}" -G "Visual Studio 17 2022" -A x64 -DCMAKE_PREFIX_PATH="${{ env.QT_DIR }}\lib\cmake"

      - name: CMake Build
        shell: cmd
        run: |
          echo "Building project..."
          cmake --build "${{ github.workspace }}\${{ env.BUILD_DIR }}" --config Release

      - name: Deploy Qt DLLs
        shell: cmd
        run: |
          echo "Deploying Qt DLLs using windeployqt..."
          if exist "${{ github.workspace }}\${{ env.BUILD_DIR }}\Release\${{ env.EXE_NAME }}" (
            "${{ env.QT_DIR }}\bin\windeployqt.exe" "${{ github.workspace }}\${{ env.BUILD_DIR }}\Release\${{ env.EXE_NAME }}"
          ) else (
            echo "Executable not found, skipping windeployqt."
          )

      - name: Run Executable for 1 minute
        shell: powershell
        run: |
          $exePath = Join-Path "${{ github.workspace }}\${{ env.BUILD_DIR }}\Release" "${{ env.EXE_NAME }}"
          if (-Not (Test-Path $exePath)) {
            Write-Error "Executable not found: $exePath"
            exit 1
          }
          Write-Output "Starting $($env:EXE_NAME)..."
          $p = Start-Process -FilePath $exePath -PassThru
          Start-Sleep -Seconds 60
          Stop-Process -Id $p.Id
          Write-Output "Executable stopped after 1 minute."

      - name: Build Success
        if: success()
        run: echo "✓ Build completed successfully!"

      - name: Build Failure
        if: failure()
        run: echo "✗ Build failed. Check logs above for errors."
